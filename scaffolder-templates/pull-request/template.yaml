apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: pull-request
  title: Integrar projeto ao CI/CD
  description: Adicione um projeto existente a esteira CI/CD
spec:
  owner: backstage/techdocs-core
  type: service

  parameters:
    - title: Preencha as informações
      required:
        - component_id
        - description
        - type
      properties:
        component_id:
          title: Nome
          type: string
          description: Nome único do componente
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Descrição
          type: string
          description: Descrição do componente
        type:
          title: Tipo
          type: string
          enum: ["service", "website", "library"]
          description: Tipo do componente
        docker_image:
          title: Imagem Docker para construir o projeto
          type: string
          description: Imagem docker que será utilizada durante a fase de build da esteira
        build_steps:
          title: Passos do build
          type: array
          items: {
            type: string
          }
          description: "Lista de comandos usados para construir o projeto na esteira, eg: npm install, npm run build"
        dev_hosts:
          title: Hosts de acesso em dev
          type: array
          items: {
            type: string
          }
          description: "Hosts que serão usadas para acessar esse sistema em dev eg: dev.example.com"
        dev_paths:
          title: Base paths em dev
          type: array
          items: {
            type: string
          }
          description: "Caminhos base a serem usados pelo sistema em dev (base path). Eg: /api"
        prod_hosts:
          title: Hosts de acesso em prod
          type: array
          items: {
            type: string
          }
          description: "Hosts que serão usadas para acessar esse sistema em prod eg: prod.example.com"
        prod_paths:
          title: Base paths em prod
          type: array
          items: {
            type: string
          }
          description: "Caminhos base a serem usados pelo sistema em prod (base path). Eg: /api"
        owner:
          title: Dono
          type: string
          description: Dono do componente
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Escolha uma localização
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Gerando arquivos
      action: fetch:template
      input:
        url: ./template
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          docker_image: ${{ parameters.docker_image }}
          build_steps: ${{ parameters.build_steps }}
          dev_hosts: ${{ parameters.dev_hosts }}
          dev_paths: ${{ parameters.dev_paths }}
          prod_hosts: ${{ parameters.prod_hosts }}
          prod_paths: ${{ parameters.prod_paths }}
          owner: ${{ parameters.owner }}

    - id: webhook
      name: Adicionando Webhook
      action: 'github:webhook'
      input:
        repoUrl: ${{ parameters.repoUrl }}
        webhookUrl: https://jenkins.consigmais.com.br/generic-webhook-trigger/invoke?token=consigmais_webhook
        contentType: 'json'

    - id: publish
      name: Publicando PR
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        title: "Preparando para a esteira CI/CD: ${{ parameters.name }}"
        branchName: deployment
        description: |
          # Preparando para a esteira CI/CD: ${{ parameters.name }}

          ${{ parameters.description if parameters.description }}

    - id: register
      name: Registrando no catalogo
      action: 'catalog:register'
      input:
        repoContentsUrl: ${{ parameters.repoUrl | parseRepoUrl }}
        catalogInfoPath: "/catalog-info.yaml"


  output:
    links:
      - url: ${{steps.publish.output.remoteUrl}}
        text: "Go to PR"
